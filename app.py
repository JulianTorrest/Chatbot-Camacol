import streamlit as st
import google.generativeai as genai
from datetime import datetime
import os

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="CAMACOL Chatbot",
    page_icon="üèóÔ∏è",
    layout="centered",
    initial_sidebar_state="collapsed"
)

# Informaci√≥n de contexto sobre CAMACOL
CAMACOL_CONTEXT = """
CAMACOL (C√°mara Colombiana de la Construcci√≥n) es el gremio l√≠der del sector constructor en Colombia.

INFORMACI√ìN DE LA EMPRESA:
- Fundada en 1957
- Representa a m√°s de 40,000 empresas constructoras afiliadas en Colombia
- Sede principal en Bogot√° y presencia en m√°s de 20 ciudades del pa√≠s
- Contacto: www.camacol.co

SERVICIOS PRINCIPALES:
1. Gesti√≥n Documental: Certificados, licencias, aval√∫os y documentaci√≥n t√©cnica
2. Informaci√≥n T√©cnica: Estudios de mercado, estad√≠sticas del sector constructor
3. Capacitaci√≥n: Cursos, seminarios y certificaciones para profesionales del sector
4. Representaci√≥n Gremial: Fortalecimiento del sector constructor ante entidades p√∫blicas y privadas
5. Desarrollo Sectorial: Promoci√≥n de buenas pr√°cticas en construcci√≥n sostenible

ESTAD√çSTICAS DEL SECTOR:
- El sector constructor aporta aproximadamente el 10% del PIB colombiano
- Genera m√°s de 2 millones de empleos directos e indirectos
- CAMACOL agrupa m√°s del 70% de las empresas constructoras formales del pa√≠s

EVENTOS Y ACTIVIDADES:
- Ferias de construcci√≥n
- Seminarios t√©cnicos
- Certificaciones profesionales
- Ruedas de negocio

TEMAS FRECUENTES:
- Licencias de construcci√≥n
- Normatividad del sector
- Certificaciones profesionales
- Estudios de mercado inmobiliario
- Sustentabilidad en construcci√≥n
- Seguridad industrial en obra
"""

# Inicializar el historial de chat
if "messages" not in st.session_state:
    st.session_state.messages = []
    # Mensaje de bienvenida inicial
    st.session_state.messages.append({
        "role": "assistant",
        "content": "¬°Hola! üëã Soy el asistente virtual de CAMACOL. Estoy aqu√≠ para ayudarte con informaci√≥n sobre la C√°mara Colombiana de la Construcci√≥n, servicios del sector constructor, normatividad, eventos y m√°s. ¬øEn qu√© puedo ayudarte?"
    })

if "model" not in st.session_state:
    st.session_state.model = None

# Configurar Google AI
def setup_google_ai():
    """Configura el modelo de Google AI"""
    api_key = st.secrets.get("GOOGLE_API_KEY")
    
    if not api_key:
        st.error("‚ö†Ô∏è No se encontr√≥ la clave de API de Google AI. Por favor configura GOOGLE_API_KEY en los secrets de Streamlit Cloud.")
        st.info("Para configurar los secrets en Streamlit Cloud:\n1. Ve a tu aplicaci√≥n en share.streamlit.io\n2. Click en 'Settings' ‚Üí 'Secrets'\n3. Agrega: GOOGLE_API_KEY = 'tu_clave_aqui'")
        return None
    
    try:
        genai.configure(api_key=api_key)
        
        # Usar gemini-1.5-flash que es el modelo m√°s reciente y r√°pido
        # Si falla, se mostrar√° un mensaje de error con el modelo alternativo
        model = genai.GenerativeModel('gemini-1.5-flash')
        return model
        
    except Exception as e:
        error_msg = str(e)
        st.error(f"Error al configurar Google AI: {error_msg}")
        
        # Sugerencia espec√≠fica seg√∫n el error
        if "404" in error_msg:
            st.warning("‚ö†Ô∏è El modelo no est√° disponible. Verifica tu API key en [Google AI Studio](https://makersuite.google.com/app/apikey)")
        else:
            st.info("üí° Verifica que tu API key sea v√°lida y tenga acceso a los modelos de Gemini")
        
        return None

# T√≠tulo principal
st.title("üèóÔ∏è Chatbot CAMACOL")
st.markdown("**Tu asistente virtual para informaci√≥n sobre construcci√≥n en Colombia**")
st.markdown("---")

# Informaci√≥n del chatbot centrada
col1, col2, col3 = st.columns([1, 2, 1])
with col2:
    st.info("üí° Este chatbot utiliza Google AI (Gemini) para proporcionar informaci√≥n sobre CAMACOL y el sector constructor en Colombia.")

# Preguntas sugeridas en columnas
st.markdown("### üí° Preguntas sugeridas")
col1, col2 = st.columns(2)

sugestiones = [
    "¬øQu√© es CAMACOL?",
    "¬øCu√°les son los servicios de CAMACOL?",
    "Informaci√≥n sobre el sector constructor",
    "¬øC√≥mo puedo afiliarme?",
    "Eventos pr√≥ximos de CAMACOL",
    "Estad√≠sticas del sector"
]

with col1:
    for i in range(0, len(sugestiones), 2):
        if st.button(sugestiones[i], key=f"sug{i}", use_container_width=True):
            st.session_state.messages.append({"role": "user", "content": sugestiones[i]})
            st.rerun()

with col2:
    for i in range(1, len(sugestiones), 2):
        if st.button(sugestiones[i], key=f"sug{i}", use_container_width=True):
            st.session_state.messages.append({"role": "user", "content": sugestiones[i]})
            st.rerun()

# Enlaces √∫tiles y bot√≥n limpiar
st.markdown("---")
col1, col2, col3 = st.columns([2, 1, 1])

with col1:
    st.markdown("### üîó Enlaces √∫tiles")
    st.markdown("- [Sitio web oficial](https://camacol.co) | [Eventos](https://camacol.co/eventos) | [Capacitaci√≥n](https://camacol.co/capacitacion)")

with col3:
    if st.button("üóëÔ∏è Limpiar Chat", use_container_width=True):
        st.session_state.messages = [st.session_state.messages[0]]
        st.rerun()

st.markdown("---")

# Configurar modelo si no est√° configurado
if st.session_state.model is None:
    st.session_state.model = setup_google_ai()

# Mostrar historial de mensajes
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# Input del usuario
if prompt := st.chat_input("Escribe tu pregunta sobre CAMACOL o el sector constructor..."):
    # Agregar mensaje del usuario
    st.session_state.messages.append({"role": "user", "content": prompt})
    
    with st.chat_message("user"):
        st.markdown(prompt)
    
    # Generar respuesta con Google AI
    if st.session_state.model:
        with st.chat_message("assistant"):
            with st.spinner("Pensando..."):
                try:
                    # Crear prompt con contexto de CAMACOL
                    full_prompt = f"""Eres un asistente virtual experto de CAMACOL (C√°mara Colombiana de la Construcci√≥n). 
                    Tu objetivo es ayudar a los usuarios con informaci√≥n precisa y √∫til sobre CAMACOL y el sector constructor en Colombia.
                    
                    CONTEXTO DE CAMACOL:
                    {CAMACOL_CONTEXT}
                    
                    INSTRUCCIONES:
                    - Responde de manera amigable y profesional
                    - Si te preguntan sobre informaci√≥n espec√≠fica de CAMACOL que no tienes en el contexto, dir√≠geles al sitio web oficial: www.camacol.co
                    - Proporciona informaci√≥n clara y concisa
                    - Responde en espa√±ol colombiano
                    - Mant√©n un tono profesional pero cercano
                    
                    PREGUNTA DEL USUARIO: {prompt}
                    
                    RESPUESTA:"""
                    
                    response = st.session_state.model.generate_content(full_prompt)
                    respuesta = response.text
                    
                    st.markdown(respuesta)
                    st.session_state.messages.append({"role": "assistant", "content": respuesta})
                    
                except Exception as e:
                    error_msg = f"Lo siento, ocurri√≥ un error al procesar tu solicitud: {str(e)}"
                    st.error(error_msg)
                    st.session_state.messages.append({"role": "assistant", "content": error_msg})
    else:
        with st.chat_message("assistant"):
            st.warning("Por favor configura la clave de API de Google AI en los secrets de Streamlit Cloud para usar el chatbot.")

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: gray;'>
    <p>Chatbot desarrollado para CAMACOL - C√°mara Colombiana de la Construcci√≥n</p>
    <p>Powered by Google AI (Gemini) & Streamlit</p>
</div>
""", unsafe_allow_html=True)


